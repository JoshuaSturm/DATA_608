shiny::runApp()
runApp()
runApp()
# Read in the dataset
cdc <- read.csv("cleaned-cdc-mortality-1999-2010-2.csv", stringsAsFactors = F)
cdc <- cdc %>%
filter(Year == 2010) %>%
select(1, 2, 6) %>%
group_by(ICD.Chapter)
library(shiny)
library(tidyverse)
library(plotly)
runApp()
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
output$barPlot <- renderPlotly({
cdc <- cdc %>%
filter(ICD.Chapter == input$Cause)
p <- ggplot(cdc, aes(x = reorder(State, -Crude.Rate), y = Crude.Rate, fill = Crude.Rate,
text = paste("State:", State, "<br>Crude Rate:", Crude.Rate))) +
geom_bar(stat = "identity") +
ylab(input$Cause) +
theme(axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 90))
ggplotly(p, tooltip = "text")
})
})
runApp()
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("2010 mortality rate by disease per State"),
# Sidebar with a slider input for year selection
sidebarLayout(
sidebarPanel(
# Select input for cause
selectInput("Cause",
"Cause:",
unique(cdc$ICD.Chapter))
),
# Graph bar chart
mainPanel(
plotlyOutput("barPlot")
)
)
))
runApp()
library(plotly)
install.packages("plotly")
runApp()
library(plotly)
library(plotly)
install.packages("data.table")
runApp()
library(plotly)
install.packages("data.table")
install.packages("data.table", repo = "https://cran.cnr.Berkeley.edu/")
install.packages("data.table", repo = "https://cloud.r-project.org/")
install.packages("data.table")
