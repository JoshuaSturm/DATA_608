knitr::opts_chunk$set(warning = F, message = F, collapse = T, cache = T)
library(tidyverse)
library(cars)
library(car)
cars
data <- cars
View(data)
?lm
model <- lm(formula = dist ~ speed,
data = data)
summary(model)
library(gridExtra)
rp1 <- ggplot(model, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(model, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- ggplot(model) +
stat_qq(aes(sample = .stdresid)) +
geom_abline()
rp4 <- ggplot(model, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(model, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(model, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(model, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp8 <- ggplot(model, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
grid.arrange(rp1, rp2, rp3, rp4, rp5, rp6, rp7, rp8, ncol = 2)
glimpse(data)
?cars
model <- lm(formula = dist ~ speed,
data = data)
summary(model)
str(summary(model))
names(summary(model))
View(summary(model))
summary(model)$coefficients
summary(model)$coefficients[2,4]
updateR()
library(installr)
updateR()
install.packages("pillar")
install.packages("pillar")
load("~/GitHub/DATA_605/Assignment 12/.RData")
install.packages('tinytex', repos = 'https://cran.rstudio.com')
summary(model1)$rsquared
summary(model1)$r.squared
gvlma(model1)
gvlma::gvlma(model1)
gvlma(model1)
library(gvlma)
gvlma(model1)
# Transform variables
m2.LifeExp <- who$LifeExp^(4.6)
m2.TotExp <- who$TotExp^(0.06)
model2 <- lm(formula =  m2.LifeExp ~ m2.TotExp)
# Transform variables
m2.LifeExp <- who$LifeExp^(4.6)
m2.TotExp <- who$TotExp^(0.06)
model2 <- lm(formula =  m2.LifeExp ~ m2.TotExp)
summary(model2)
pplots(model2)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
# Chunk 2: load-libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(gvlma)
library(gridExtra)
# Chunk 3: import-dataset
who <- read.csv("who.csv", na.strings = c("", "NA", "NaN"))
# Chunk 4: data-dictionary
defs <- c("Name of the country",
"Average life expectancy for the country in years",
"Proportion of those surviving to one year or more",
"Proportion of those surviving to five years or more",
"Proportion of the population without TB",
"Proportion of the population who are MDs",
"Proportion of the population who are RNs",
"Mean personal expenditures on healthcare in US dollars at average exchange rate",
"Mean government expenditures per capita on healthcare, US dollars at average exchange rate",
"Sum of personal and government expenditures")
who.dict <- data.frame(names(who), defs, stringsAsFactors = F)
names(who.dict) <- c("Variable Name", "Definition")
kable(who.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 5: predict-plots-function
pplots <- function(model){
rp1 <- ggplot(model, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(model, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- ggplot(model) +
stat_qq(aes(sample = .stdresid)) +
geom_abline()
rp4 <- ggplot(model, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(model, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(model, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(model, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp8 <- ggplot(model, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
grid.arrange(rp1, rp2, rp3, rp4, rp5, rp6, rp7, rp8, ncol = 2)
}
# Chunk 6: data-structure
kable(psych::describe(who), format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 7: scatterplot-lifexp-totexp
ggplot(data = who, aes(x = TotExp, y = LifeExp)) +
geom_point()
# Chunk 8: simple-regression
model1 <- lm(formula =  LifeExp ~ TotExp,
data = who)
summary(model1)
pplots(model1)
# Chunk 9: gvlma-model-one
gvlma(model1)
# Transform variables
m2.LifeExp <- who$LifeExp^(4.6)
m2.TotExp <- who$TotExp^(0.06)
model2 <- lm(formula =  m2.LifeExp ~ m2.TotExp)
summary(model2)
pplots(model2)
str(summary(model2))
summary(model2)$coefficients
summary(model2)$sigma
glimpse(summary(model2))
summary(model2)$sigma
anova(model1, model2)
# Transform variables
m2.LifeExp <- who$LifeExp^(4.6)
m2.TotExp <- who$TotExp^(0.06)
model2 <- lm(formula =  m2.LifeExp ~ m2.TotExp)
summary(model2)
pplots(model2)
gvlma(model2)
str(summary(model2))
âˆ’736527910+620060216*(1.5)
model3 <- lm(formula =  LifeExp ~ propMD + TotExp + propMD*TotExp,
data = who)
summary(model3)
pplots(model3)
gvlma(model3)
View(who)
model3 <- lm(formula =  LifeExp ~ PropMD + TotExp + PropMD*TotExp,
data = who)
summary(model3)
pplots(model3)
gvlma(model3)
plot(model3)
pplots(model3)$3
pplots(model3)$rp3
str(pplots(model3))
as.integer(summary(model3)$coefficients[[1]])
summary(model3)$coefficients[[1]]
range(who$TotExp)
range(who$LifeExp)
View(who)
setwd("~/GitHub/DATA_608/Final Project")
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
setwd("~/GitHub/DATA_608/Final Project")
library(tidyverse)
library(knitr)
library(kableExtra)
library(gvlma)
library(gridExtra)
library(tidyverse)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", header = F)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", header = T)
View(bySex)
names(bySex)[1:5]
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
bySex[1,]
bySex[0,]
bySex <- bySex[-0,]
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
names(bySex) <- bySex[1,]
names(bySex) <- bySex[2,]
bySex[2,]
bySex[1,]
View(bySex[1,])
colnames(bySex) <- bySex[1,]
View(bySex)
names(bySex)
colnames(bySex) <- as.character(unlist(bySex[1,]))
bySex = bySex[-1, ]
View(bySex)
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
setwd("~/GitHub/DATA_608/Final Project")
library(tidyverse)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", cache = T)
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
setwd("~/GitHub/DATA_608/Final Project")
library(tidyverse)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
colnames(bySex) <- as.character(unlist(bySex[1,]))
bySex = bySex[-1, ]
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
setwd("~/GitHub/DATA_608/Final Project")
library(tidyverse)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", header = F)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv")
View(bySex)
k <- bySex %>%
group_by(Year)
View(k)
k <- bySex %>% gather()
View(k)
k <- bySex %>% reshapre2::melt()
k <- bySex %>% reshape2::melt()
View(k)
k <- bySex %>% reshape2::melt(Year)
k <- bySex %>% reshape2::melt("Year")
View(k)
View(bySex)
View(bySex)
k <- bySex %>% group_by(., c(Year, Year.1, Year.2, Year.3, Year.4))
k <- bySex %>% group_by(Year)
k <- bySex %>% group_by(Year) %>% gather()
View(k)
k <- bySex %>% gather(Year)
View(k)
k <- bySex
grepl(pattern = ".*Year", x = names(k))
names(k) <- gsub(pattern = ".*Year", replacement = "Year", x = names(k))
names(k)
names(k) <- gsub(pattern = "Year.*", replacement = "Year", x = names(k))
names(k)
k <- k %>% group_by(Year)
View(k)
k <- k %>% group_by(Year) %>% gather(Year)
View(k)
# colnames(bySex) <- as.character(unlist(bySex[1,]))
# bySex = bySex[-1, ]
k <- bySex
names(k) <- gsub(pattern = "Year.*", replacement = "Year", x = names(k))
k %<>% gather(Year)
library(tidyverse)
library(tidyverse)
library(magrittr)
k %<>% gather(Year)
View(bySex)
View(k)
# colnames(bySex) <- as.character(unlist(bySex[1,]))
# bySex = bySex[-1, ]
k <- bySex
names(k) <- gsub(pattern = "Year.*", replacement = "Year", x = names(k))
k %<>% gather(Year)
View(k)
# colnames(bySex) <- as.character(unlist(bySex[1,]))
# bySex = bySex[-1, ]
k <- bySex
names(k) <- gsub(pattern = "Year.*", replacement = "Year", x = names(k))
k %<>% spread(Year)
k %<>% unite(Year)
View(k)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("", "NA", "NaN"))
View(k)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("NA", "NaN"))
View(k)
View(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("", "NA", "NaN", "No Data"))
View(bySex)
summary(bySex)
# Any row that has an NA is missing the entire row, so we can safely remove those
bySex <- bySex[complete.cases(bySex)]
# Any row that has an NA is missing the entire row, so we can safely remove those
bySex <- complete.cases(bySex)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("", "NA", "NaN", "No Data"))
# Any row that has an NA is missing the entire row, so we can safely remove those
bySex <- bySex[complete.cases(bySex),]
View(bySex)
any(is.na(bySex))
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("", "NA", "NaN", "No Data"))
# Any row that has an NA is missing the entire row, so we can safely remove those
bySex <- bySex[complete.cases(bySex),]
30-16
plot(bySex)
View(bySex)
# colnames(bySex) <- as.character(unlist(bySex[1,]))
# bySex = bySex[-1, ]
k <- bySex
k %>% group_by(Year)
bySex <- read.csv("./data/OB_PREV_by_sex_ALL_STATES.csv", na.strings = c("", "NA", "NaN", "No Data"), header = T)
# Any row that has an NA is missing the entire row, so we can safely remove those
bySex <- bySex[complete.cases(bySex),]
names(bySex)
colnames(bySex) <- c("State", "FIPS_Codes", "County",
"numberMen", "percentMen", "lowerConfIntMen",
"upperConfIntMen", "ageAdjPercMen", "ageAdjLowerConfIntMen",
"ageAdjUpperConfIntMen", "numberWomen", "percentWomen",
"lowerConfIntWomen", "upperConfIntWomen", "ageAdjPercWomen",
"ageAdjLowerConfIntWomen", "ageAdjUpperConfIntWomen", "Year")
names(bySex)
k %>% group_by(State, FIPS_Codes, County, Year)
k %>% group_by("State", FIPS_Codes, County, Year)
k %>% group_by("State", "FIPS_Codes", "County", "Year")
k <- bySex
k %>% group_by("State", "FIPS_Codes", "County", "Year")
View(bySex)
write.csv(bySex, "bySex_all_states.csv")
acs09 <- read.csv("./data/ACS_09_1YR_S1701_with_ann.csv", na.strings = c("", "NA", "NaN"))
View(acs09)
library(tidyverse)
library(magrittr)
install.packages(c("httpuv", "later", "psych", "stringi"))
summary(acs09)
